# Aca va la clase CatalogoPelicula y la  logica del menu


import pelicula
import directorioCatalogo
import Imagen
import listaImagenes
import os
from colorama import Fore, Style, init
import unicodedata

class CatalogoPelicula:
    def __init__(self, nombreCatalogo):
        self.nombreCatalogo = nombreCatalogo # Nombre es el nombre del catalogo
        self.ruta_archivo = nombreCatalogo + '.txt' # Ruta del archivo donde se va a guardar el catalogo
        self.directorio = "Catalogos"
        self.ruta_directorio = os.path.join(os.getcwd(),self.directorio) # Ruta completa del directorio
        self.ruta_archivo_completo = os.path.join(self.ruta_directorio, self.ruta_archivo)  # Ruta completa del archivo de cat√°logo
    
    #Permite dar la bienvenida al usuario
    def bienvenida():
        init()
        print(Fore.MAGENTA)
        print("--- ‚ú® üé• ¬°Bienvenido al Cat√°logo de Pel√≠culas! üé• ‚ú®---")
        print(Style.RESET_ALL, end="")

    #Permite eliminar los acentos en el nombre del cat√°logo   
    def eliminar_acentos(nombreCatalogo):
        return ''.join(c for c in unicodedata.normalize('NFD', nombreCatalogo) if unicodedata.category(c) != 'Mn').title()


    # Permite validar si existe o no un cat√°logo de pel√≠cula
    def validar_catalogo(self):  
        directorioCatalogo.DirectorioCatalogo.validar_directorio_catalogo(self.ruta_directorio)
        if os.path.exists(self.ruta_archivo_completo):
            print(f"Bienvenido al Cat√°logo de Pel√≠culas de {self.nombreCatalogo}")
            return self.nombreCatalogo
        else:
            with open(self.ruta_archivo_completo, 'a', encoding="utf-8") as file:  # 'a' modo append para agregar o crear el archivo del catalgo de la pelicula
                file.write("Pel√≠cula - Clasificaci√≥n - Poster")
                print(f"‚úîÔ∏è  Se cre√≥ el cat√°logo de {self.ruta_archivo} exitosamente.")
                print(f"Bienvenido al Cat√°logo de Pel√≠culas de {self.nombreCatalogo}")
            return self.nombreCatalogo


    #Permite ingresar la informaci√≥n del nombre del cat√°logo de pel√≠culas
    def datos_catalogo():
        init()
        print(Fore.YELLOW)
        print("--- CREACI√ìN DEL CAT√ÅLOGO ---")
        nombreCat = CatalogoPelicula.eliminar_acentos(input("Escribe el nombre del cat√°logo de pel√≠culas: ").title() )       
        catalogoPeli = CatalogoPelicula(nombreCat)  
        catalogoPeli.creacion_catalogo()
        print(Style.RESET_ALL, end="")
        
    # Permite agregar una pel√≠cula al cat√°logo correspondiente
    def agregar_pelicula(self):
        init()
        print(Fore.YELLOW)
        print("--- AGREGAR PEL√çCULA ---")
        nombrePelicula = input("Escribe el nombre de la pel√≠cula: ").title()
        clasificacionPelicula = input(f"Escribe la clasificaci√≥n de la pel√≠cula ({nombrePelicula}): ").title()
        print("Subir poster de la pel√≠cula:")
        Imagen.Imagen.abrir_ventana_subir_imagen(self)
        nombreImagen =Imagen.Imagen.get_nombre_imagen(self)
        peli = pelicula.Pelicula(nombrePelicula,clasificacionPelicula,nombreImagen)
        resultado = peli.buscar_pelicula(self.ruta_archivo_completo, peli.get_nombre())
        if resultado == False:
            with open(self.ruta_archivo_completo, "a", encoding="utf-8") as file:
                file.write(f"\n{peli.get_nombre()} - {peli.clasificacion} - {peli.imagen}")
            print(f"‚úîÔ∏è  La pel√≠cula {peli.get_nombre()} se registro exitosamente.")
        else:
            print(f"‚ö†Ô∏è  La pel√≠cula {peli.get_nombre()} ya est√° registrada en el cat√°logo {self.nombreCatalogo}.")
        print(Style.RESET_ALL, end="")
        
    # Permite mostrar todas las pel√≠culas del cat√°logo correspondiente
    def mostrar_peliculas(self):
        init()
        print(Fore.MAGENTA)
        print("---MOSTRAR PEL√çCULAS---")
        lista_imagenes = []
        with open(self.ruta_archivo_completo, "r", encoding="utf-8") as file:
            linea = file.readline()
            indice = 0
            while linea:                
                if indice != 0:
                    print(linea.strip())
                    Style.RESET_ALL
                    poster,informacion = pelicula.Pelicula.obtener_nombre_poster(linea.strip())
                    ruta = os.path.join(os.getcwd(),"Imagenes")                    
                    imagenes = {"Pelicula": informacion.rstrip("-"),"Imagen": os.path.join(ruta, poster.lstrip())}
                    lista_imagenes.append(imagenes)
                else:
                    print(linea.strip())
                indice += 1
                linea = file.readline()
        print(Style.RESET_ALL, end="")
        listaImagenes.ListaImagenes.crear_ventana(lista_imagenes, self.nombreCatalogo)    
        
                
    # Permite mostrar todas las pel√≠culas del cat√°logo correspondiente
    def eliminar_catalogo_peliculas(self):
        init()
        print(Fore.YELLOW)
        print("--- ELIMINAR CAT√ÅLOGO ---")
        confirmacion = ""
        while confirmacion not in ["Si", "No"]:
            confirmacion = input(f"¬øEst√° seguro que desea eliminar el cat√°logo de pel√≠culas de {self.nombreCatalogo}? (Si/No): ").title()
            if confirmacion not in ["Si", "No"]:
                print("‚ùå  Error: Solo se permite una opci√≥n de Si o No.")
        
        if confirmacion ==  "Si":
            if os.path.exists(self.ruta_archivo_completo):
                os.remove(self.ruta_archivo_completo)
                print(f"üóëÔ∏è  El cat√°logo de pel√≠culas '{self.ruta_archivo}' ha sido eliminado.")
                print("Crea un nuevo cat√°logo de pel√≠culas:")
                CatalogoPelicula.datos_catalogo()
                return True
            else:
                print(f"‚ö†Ô∏è  El cat√°logo de pel√≠culas '{self.ruta_archivo}' no existe.")
        else:
            print(f"Ha decidido no eliminar el cat√°logo {self.nombreCatalogo}")
            return False
        print(Style.RESET_ALL, end="")
        
    #Permite la opci√≥n de cambiar a otro cat√°logo de pel√≠culas
    def cambiar_catalogo(self):
        init()
        print(Fore.YELLOW)
        print("--- CAMBIAR CAT√ÅLOGO ---")        
        confirmacion = ""
        while confirmacion not in ["Si", "No"]:
            confirmacion = input(f"¬øQuieres cambiar a otro cat√°logo de pel√≠culas? (Si/No): ").title()
            if confirmacion not in ["Si", "No"]:
                print("‚ùå  Error: Solo se permite una opci√≥n de Si o No.")
        
        if confirmacion == "Si":
            print("üîÑ  Haz elegido cambiar de cat√°logo de pel√≠culas.")
            CatalogoPelicula.datos_catalogo()
            return True
        else:
            print(f"Haz regresado al men√∫ del cat√°logo de pel√≠culas de {self.nombreCatalogo}.")
            print(Style.RESET_ALL, end="")
            return False
        
        
    #Permite mostrar todas las opciones disponibles para trabajar en el cat√°logo de pel√≠culas
    def mostrar_menu_opciones(self):
            init()
            print(Fore.BLUE)
            try:
                opcion = int(input(f"--- Men√∫ del Cat√°logo {self.nombreCatalogo} --- \n"
                            "1) Agregar pel√≠cula\n"
                            "2) Mostrar Cat√°logo de pel√≠culas \n"
                            "3) Eliminar Cat√°logo de pel√≠culas \n"
                            "4) Cambiar otro Cat√°logo de pel√≠culas \n"
                            "5) Salir \n"
                            "Tu opci√≥n: "))
                print(Style.RESET_ALL, end="")
                if opcion == 1 or opcion == 2 or opcion == 3 or opcion == 4 or opcion == 5:
                    return opcion
                else:
                    print("‚ùå  Error: Solo se permite un n√∫mero del 1 al 5.")
                    return CatalogoPelicula.mostrar_menu_opciones()  
                
            except ValueError:
                print("‚ùå  Error: Solo se permite un n√∫mero del 1 al 5.")
                return CatalogoPelicula.mostrar_menu_opciones() 
        
            
    # Permite mostrar las opciones del men√∫ para el cat√°logo de pel√≠cula
    def creacion_catalogo(self):
        CatalogoPelicula.validar_catalogo(self)
        while True:
            opcion = CatalogoPelicula.mostrar_menu_opciones(self)
            
            if opcion == 1:
                CatalogoPelicula.agregar_pelicula(self)
            elif opcion == 2:
                CatalogoPelicula.mostrar_peliculas(self)
            elif opcion == 3:
                if CatalogoPelicula.eliminar_catalogo_peliculas(self):
                    break
            elif opcion == 4:
                if CatalogoPelicula.cambiar_catalogo(self):                                
                    break
            else:
                init()
                print(Fore.MAGENTA)
                print(f"¬°Gracias por visitar el Cat√°logo de Pel√≠culas de {self.nombreCatalogo} ! üé• ‚ú® \n")
                print("¬°Hasta la pr√≥xima y que tengas un d√≠a de pel√≠cula! üçøüëã")
                print(Style.RESET_ALL, end="")
                break
        

        
                    
# Permite al usuario ingresar el catal√≥go de las peliculas
CatalogoPelicula.bienvenida()
CatalogoPelicula.datos_catalogo()

